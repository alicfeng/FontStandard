{"title":"Docs JSON Data Output Target - Stencil","description":"Docs JSON Output Target","url":"/docs/docs-json","contributors":["adamdbradley","snaptopixel","manucorporat","amwmedia","mrtnmgs","marcjulian"],"headings":[{"id":"docs-json-data","level":1,"text":"Docs Json Data"},{"id":"css-variables","level":2,"text":"CSS Variables"},{"id":"slots","level":2,"text":"Slots"},{"id":"usage","level":2,"text":"Usage"},{"id":"custom-jsdocs-tags","level":2,"text":"Custom JSDocs Tags"}],"srcPath":"./src/docs/output-targets/docs-json.md","hypertext":["div",null,["h1",{"id":"docs-json-data"},"\n  \n  Docs Json Data\n  \n"],"\n",["p",null,"While auto-generated readme files formatted with markdown is convenient, there may be scenarios where it'd be better to get all of the docs in the form of json data. To build the docs as json, use the ",["code",null,"--docs-json"]," flag, followed by a path on where to write the json file."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},"  scripts",["span",{"class":"token operator"},":"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token string"},"\"docs.data\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"stencil build --docs-json path/to/docs.json\""],"\n  ",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  ",["p",null,"Another option would be to add the ",["code",null,"docs-json"]," output target to the ",["code",null,"stencil.config.ts"]," in order to auto-generate this file with every build:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Config ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"const"]," config",["span",{"class":"token operator"},":"]," Config ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token punctuation"},"{"],"\n  outputTargets",["span",{"class":"token operator"},":"]," ",["span",{"class":"token punctuation"},"["],"\n    ",["span",{"class":"token punctuation"},"{"]," ",["span",{"class":"token keyword"},"type"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"'docs-json'"]," ",["span",{"class":"token punctuation"},"}"],"\n  ",["span",{"class":"token punctuation"},"]"],"\n",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},";"]]],"\n  "],"\n  ",["p",null,"Check out the typescript declarations for the JSON output: ",["a",{"href":"https://github.com/ionic-team/stencil/blob/master/src/declarations/stencil-public-docs.ts"},"https://github.com/ionic-team/stencil/blob/master/src/declarations/stencil-public-docs.ts"]],"\n\n",["h2",{"id":"css-variables"},"\n  ",["a",{"class":"heading-link","href":"#css-variables"},["app-icon",{"name":"link"}],"\n  CSS Variables\n  "],"\n"],"\n",["p",null,"Stencil will also document CSS variables when you specify them via jsdoc-style comments inside your css/scss files:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-css"},["code",{"class":"language-css"},["span",{"class":"token comment"},"/**\n * @prop --background: Background of the button\n * @prop --background-activated: Background of the button when activated\n * @prop --background-focused: Background of the button when focused\n */"]]],"\n  "],"\n  \n",["h2",{"id":"slots"},"\n  ",["a",{"class":"heading-link","href":"#slots"},["app-icon",{"name":"link"}],"\n  Slots\n  "],"\n"],"\n",["p",null,"Slots can be documented by adding ",["code",null,"@slot"]," tags to the doc comments above the component decorator."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token comment"},"/**\n * @slot slotName - slotDescription\n * @slot buttonContent - Slot for the content of the button\n */"]]],"\n  "],"\n  \n",["h2",{"id":"usage"},"\n  ",["a",{"class":"heading-link","href":"#usage"},["app-icon",{"name":"link"}],"\n  Usage\n  "],"\n"],"\n",["p",null,"The content of ",["code",null,".md"]," files in a ",["code",null,"usage"]," subdirectory of a component will be added to the ",["code",null,"usage"]," property of the generated json."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-bash"},["code",{"class":"language-bash"},"src/\n  components/\n    my-component/\n      usage/\n        usage-example.md\n        another-example.md\n      my-component.css\n      my-component.tsx"]],"\n  "],"\n  \n",["h2",{"id":"custom-jsdocs-tags"},"\n  ",["a",{"class":"heading-link","href":"#custom-jsdocs-tags"},["app-icon",{"name":"link"}],"\n  Custom JSDocs Tags\n  "],"\n"],"\n",["p",null,"In addition to reading the predefined JSDoc tags, users can provide their own custom tags which also get included in the JSON data. This makes it easier for teams to provide their own documentation and conventions to get built within the JSON data. For example, if we added a comment into our source code like this:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token comment"},"/**\n * @myDocTag someName - some value\n * @myOtherDocTag someOtherName - some other name\n */"]]],"\n  "],"\n  ",["p",null,"It would end up in the JSON data like this:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token string"},"\"docsTags\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token punctuation"},"["],"\n  ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token string"},"\"text\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"someName - some value\""],["span",{"class":"token punctuation"},","],"\n    ",["span",{"class":"token string"},"\"name\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"myDocTag\""],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},","],"\n  ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token string"},"\"text\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"someOtherName - some other name\""],["span",{"class":"token punctuation"},","],"\n    ",["span",{"class":"token string"},"\"name\""],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"myOtherDocTag\""],"\n  ",["span",{"class":"token punctuation"},"}"],"\n",["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},","]]],"\n  "]]}