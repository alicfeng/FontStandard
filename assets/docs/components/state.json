{"title":"Internal state - Stencil","description":"Use the State() for component's internal state","url":"/docs/state","contributors":["jthoms1","ankitshaw42","manucorporat","myhandleisdan","leofavre","polRk","adamdbradley"],"lastUpdated":"2020-10-15T15:10:02Z","headings":[{"id":"state-decorator","level":1,"text":"State Decorator"},{"id":"example","level":2,"text":"Example"},{"id":"when-to-use","level":2,"text":"When to use?"}],"srcPath":"./src/docs/components/state.md","hypertext":["div",null,["h1",{"id":"state-decorator"},"\n  \n  State Decorator\n  \n"],"\n",["p",null,"The ",["code",null,"@State()"]," decorator can be used to manage internal data for a component. This means that a user cannot modify this data from outside the component, but the component can modify it however it sees fit. Any changes to a ",["code",null,"@State()"]," property will cause the components ",["code",null,"render"]," function to be called again."],"\n\n",["h2",{"id":"example"},"\n  ",["a",{"class":"heading-link","href":"#example"},["app-icon",{"name":"link"}],"\n  Example\n  "],"\n"],"\n",["p",null,"This example makes use of State and Listen decorators. We define a class property called ",["code",null,"open"]," and decorate it with ",["code",null,"@State"],". With the use of ",["code",null,"@Listen"]," we respond to click events\n toggling the value of ",["code",null,"open"],"."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Component",["span",{"class":"token punctuation"},","]," State",["span",{"class":"token punctuation"},","]," Listen",["span",{"class":"token punctuation"},","]," h ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n@",["span",{"class":"token function"},"Component"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},"{"],"\n  tag",["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"'my-toggle-button'"],"\n",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],"\n\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"MyToggleButton"]," ",["span",{"class":"token punctuation"},"{"],"\n  @",["span",{"class":"token function"},"State"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," open",["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  @",["span",{"class":"token function"},"Listen"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'click'"],["span",{"class":"token punctuation"},","]," ",["span",{"class":"token punctuation"},"{"]," capture",["span",{"class":"token operator"},":"]," ",["span",{"class":"token boolean"},"true"]," ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],"\n  ",["span",{"class":"token function"},"handleClick"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"open ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token operator"},"!"],["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"open",["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],"\n\n  ",["span",{"class":"token function"},"render"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token keyword"},"return"]," ",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],"button"],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},"\n      "],["span",{"class":"token punctuation"},"{"],["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"open ",["span",{"class":"token operator"},"?"]," ",["span",{"class":"token string"},"\"On\""]," ",["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"\"Off\""],["span",{"class":"token punctuation"},"}"],["span",{"class":"token plain-text"},"\n    "],["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"</"],"button"],["span",{"class":"token punctuation"},">"]],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  ",["p",null,"For more advanced use cases state can be a complex Type. In the below example we maintain a list of ",["code",null,"Todo"]," type values."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," State ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token keyword"},"type"]," ",["span",{"class":"token class-name"},"Todo"]," ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token punctuation"},"{"],"\n  done",["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},","],"\n  description",["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},","],"\n",["span",{"class":"token punctuation"},"}"],"\n\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"TodoList"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  @",["span",{"class":"token function"},"State"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," completedTodos",["span",{"class":"token operator"},":"]," Todo",["span",{"class":"token punctuation"},"["],["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token function"},"completeTodo"],["span",{"class":"token punctuation"},"("],["span",{"class":"token parameter"},"todo",["span",{"class":"token operator"},":"]," Todo"],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token comment"},"// This will cause our render function to be called again"],"\n    ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"completedTodos ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token punctuation"},"["],["span",{"class":"token operator"},"..."],["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"completedTodos",["span",{"class":"token punctuation"},","]," todo",["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  \n",["h2",{"id":"when-to-use"},"\n  ",["a",{"class":"heading-link","href":"#when-to-use"},["app-icon",{"name":"link"}],"\n  When to use?\n  "],"\n"],"\n",["p",null,"Not all internal state might need to be decorated with ",["code",null,"@State()"],", in fact it's a good practice to avoid using it if you know for sure that the value will not change or that it does NOT need to trigger a re-rendering:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"Component"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  ",["span",{"class":"token comment"},"// If `cacheData` changes we don't want to rerender the component,"],"\n  ",["span",{"class":"token comment"},"// so we DON'T decorate it with @State"],"\n  cacheData ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token constant"},"SOME_BIG_DATA"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"// If this state change we want to run render() again"],"\n  @",["span",{"class":"token function"},"State"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," value",["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "]]}