{"title":"Events - Stencil","description":"Events","url":"/docs/events","contributors":["jthoms1","mgalic","BDav24","mattcosta7","noherczeg","jcfranco","aiyk","rtpHarry","myhandleisdan","peterennis","unipro-wesley","adamdbradley","manucorporat"],"lastUpdated":"2020-10-15T15:11:01Z","headings":[{"id":"events","level":1,"text":"Events"},{"id":"event-decorator","level":2,"text":"Event Decorator"},{"id":"listen-decorator","level":2,"text":"Listen Decorator"},{"id":"listen-s-options","level":3,"text":"Listen&#39;s options"},{"id":"target","level":4,"text":"target"},{"id":"passive","level":4,"text":"passive"},{"id":"capture","level":4,"text":"capture"},{"id":"keyboard-events","level":2,"text":"Keyboard events"},{"id":"using-events-in-jsx","level":2,"text":"Using events in JSX"},{"id":"listening-to-events-from-a-non-jsx-element","level":2,"text":"Listening to events from a non-JSX element"}],"srcPath":"./src/docs/components/events.md","hypertext":["div",null,["h1",{"id":"events"},"\n  \n  Events\n  \n"],"\n",["p",null,"There is ",["strong",null,"NOT"]," such a thing as ",["em",null,"stencil events"],", instead, Stencil encourages the use of ",["a",{"href":"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"},"DOM events"],".\nHowever, Stencil does provide an API to specify the events a component can emit, and the events a component listens to. It does so with the ",["code",null,"Event()"]," and ",["code",null,"Listen()"]," decorators."],"\n\n",["h2",{"id":"event-decorator"},"\n  ",["a",{"class":"heading-link","href":"#event-decorator"},["app-icon",{"name":"link"}],"\n  Event Decorator\n  "],"\n"],"\n",["p",null,"Components can emit data and events using the Event Emitter decorator."],"\n",["p",null,"To dispatch ",["a",{"href":"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events"},"Custom DOM events"]," for other components to handle, use the ",["code",null,"@Event()"]," decorator."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Event",["span",{"class":"token punctuation"},","]," EventEmitter ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token operator"},"..."],"\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"TodoList"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  @",["span",{"class":"token function"},"Event"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," todoCompleted",["span",{"class":"token operator"},":"]," EventEmitter",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],["span",{"class":"token class-name"},"Todo"]],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},";\n\n  todoCompletedHandler(todo: Todo) "],["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"todoCompleted",["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"emit"],["span",{"class":"token punctuation"},"("],"todo",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token plain-text"},"\n}"]]],"\n  "],"\n  ",["p",null,"The code above will dispatch a custom DOM event called ",["code",null,"todoCompleted"],"."],"\n",["p",null,"The ",["code",null,"Event(opts: EventOptions)"]," decorator optionally accepts an options object to shape the behavior of dispatched events. The options and defaults are described below."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"interface"]," ",["span",{"class":"token class-name"},"EventOptions"]," ",["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token comment"},"/**\n   * A string custom event name to override the default.\n   */"],"\n  eventName",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token comment"},"/**\n   * A Boolean indicating whether the event bubbles up through the DOM or not.\n   */"],"\n  bubbles",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * A Boolean indicating whether the event is cancelable.\n   */"],"\n  cancelable",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * A Boolean value indicating whether or not the event can bubble across the boundary between the shadow DOM and the regular DOM.\n   */"],"\n  composed",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  ",["p",null,"Example:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Event",["span",{"class":"token punctuation"},","]," EventEmitter ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token operator"},"..."],"\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"TodoList"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  ",["span",{"class":"token comment"},"// Event called 'todoCompleted' that is \"composed\", \"cancellable\" and it will bubble up!"],"\n  @",["span",{"class":"token function"},"Event"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},"{"],"\n    eventName",["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"'todoCompleted'"],["span",{"class":"token punctuation"},","],"\n    composed",["span",{"class":"token operator"},":"]," ",["span",{"class":"token boolean"},"true"],["span",{"class":"token punctuation"},","],"\n    cancelable",["span",{"class":"token operator"},":"]," ",["span",{"class":"token boolean"},"true"],["span",{"class":"token punctuation"},","],"\n    bubbles",["span",{"class":"token operator"},":"]," ",["span",{"class":"token boolean"},"true"],["span",{"class":"token punctuation"},","],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"]," todoCompleted",["span",{"class":"token operator"},":"]," EventEmitter",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],["span",{"class":"token class-name"},"Todo"]],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},";\n\n  todoCompletedHandler(todo: Todo) "],["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token keyword"},"const"]," event ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"todoCompleted",["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"emit"],["span",{"class":"token punctuation"},"("],"todo",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n    ",["span",{"class":"token keyword"},"if"],["span",{"class":"token punctuation"},"("],["span",{"class":"token operator"},"!"],"event",["span",{"class":"token punctuation"},"."],"defaultPrevented",["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n      ",["span",{"class":"token comment"},"// if not prevented, do some default handling code"],"\n    ",["span",{"class":"token punctuation"},"}"],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token plain-text"},"\n}"]]],"\n  "],"\n  \n",["h2",{"id":"listen-decorator"},"\n  ",["a",{"class":"heading-link","href":"#listen-decorator"},["app-icon",{"name":"link"}],"\n  Listen Decorator\n  "],"\n"],"\n",["p",null,"The ",["code",null,"Listen()"]," decorator is for listening to DOM events, including the ones dispatched from ",["code",null,"@Events"],"."],"\n",["p",null,"In the example below, assume that a child component, ",["code",null,"TodoList"],", emits a ",["code",null,"todoCompleted"]," event using the ",["code",null,"EventEmitter"],"."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Listen ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token operator"},"..."],"\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"TodoApp"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  @",["span",{"class":"token function"},"Listen"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'todoCompleted'"],["span",{"class":"token punctuation"},")"],"\n  ",["span",{"class":"token function"},"todoCompletedHandler"],["span",{"class":"token punctuation"},"("],"event",["span",{"class":"token operator"},":"]," CustomEvent",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],["span",{"class":"token class-name"},"Todo"]],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},") "],["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token builtin"},"console"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"log"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'Received the custom todoCompleted event: '"],["span",{"class":"token punctuation"},","]," event",["span",{"class":"token punctuation"},"."],"detail",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token plain-text"},"\n}"]]],"\n  "],"\n  \n",["h3",{"id":"listen-s-options"},"\n  ",["a",{"class":"heading-link","href":"#listen-s-options"},["app-icon",{"name":"link"}],"\n  Listen's options\n  "],"\n"],"\n",["p",null,"The ",["code",null,"@Listen(eventName, opts?: ListenOptions)"]," includes a second optional argument that can be used to configure how the DOM event listener is attached."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"interface"]," ",["span",{"class":"token class-name"},"ListenOptions"]," ",["span",{"class":"token punctuation"},"{"],"\n  target",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"'body'"]," ",["span",{"class":"token operator"},"|"]," ",["span",{"class":"token string"},"'document'"]," ",["span",{"class":"token operator"},"|"]," ",["span",{"class":"token string"},"'window'"],["span",{"class":"token punctuation"},";"],"\n  capture",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n  passive",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  ",["p",null,"The available options are ",["code",null,"target"],", ",["code",null,"capture"]," and ",["code",null,"passive"],":"],"\n\n",["h4",{"id":"target"},"\n  ",["a",{"class":"heading-link","href":"#target"},["app-icon",{"name":"link"}],"\n  target\n  "],"\n"],"\n",["p",null,"Handlers can also be registered for an event other than the host itself.\nThe ",["code",null,"target"]," option can be used to change where the event listener is attached, this is useful for listening to application-wide events."],"\n",["p",null,"In the example below, we're going to listen for the scroll event, emitted from ",["code",null,"window"],":"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},"  @",["span",{"class":"token function"},"Listen"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'scroll'"],["span",{"class":"token punctuation"},","]," ",["span",{"class":"token punctuation"},"{"]," target",["span",{"class":"token operator"},":"]," ",["span",{"class":"token string"},"'window'"]," ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],"\n  ",["span",{"class":"token function"},"handleScroll"],["span",{"class":"token punctuation"},"("],["span",{"class":"token parameter"},"ev"],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token builtin"},"console"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"log"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'the body was scrolled'"],["span",{"class":"token punctuation"},","]," ev",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  \n",["h4",{"id":"passive"},"\n  ",["a",{"class":"heading-link","href":"#passive"},["app-icon",{"name":"link"}],"\n  passive\n  "],"\n"],"\n",["p",null,"By default, Stencil uses several heuristics to determine if it must attach a ",["code",null,"passive"]," event listener or not. The ",["code",null,"passive"]," option can be used to change the default behaviour."],"\n",["p",null,"Please check out ",["a",{"href":"https://developers.google.com/web/updates/2016/06/passive-event-listeners"},"https://developers.google.com/web/updates/2016/06/passive-event-listeners"]," for further information."],"\n\n",["h4",{"id":"capture"},"\n  ",["a",{"class":"heading-link","href":"#capture"},["app-icon",{"name":"link"}],"\n  capture\n  "],"\n"],"\n",["p",null,"Event listener attached with ",["code",null,"@Listen"]," does not \"capture\" by default.\nWhen a event listener is set to \"capture\", it means the event will be dispatched during the \"capture phase\".\nCheck out ",["a",{"href":"https://www.quirksmode.org/js/events_order.html"},"https://www.quirksmode.org/js/events_order.html"]," for further information."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},"  @",["span",{"class":"token function"},"Listen"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'click'"],["span",{"class":"token punctuation"},","]," ",["span",{"class":"token punctuation"},"{"]," capture",["span",{"class":"token operator"},":"]," ",["span",{"class":"token boolean"},"true"]," ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],"\n  ",["span",{"class":"token function"},"handleClick"],["span",{"class":"token punctuation"},"("],["span",{"class":"token parameter"},"ev"],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token builtin"},"console"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"log"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'click'"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  \n",["h2",{"id":"keyboard-events"},"\n  ",["a",{"class":"heading-link","href":"#keyboard-events"},["app-icon",{"name":"link"}],"\n  Keyboard events\n  "],"\n"],"\n",["p",null,"For keyboard events, you can use the standard ",["code",null,"keydown"]," event in ",["code",null,"@Listen()"]," and use ",["code",null,"event.keyCode"]," or ",["code",null,"event.which"]," to get the key code, or ",["code",null,"event.key"]," for the string representation of the key."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},"@",["span",{"class":"token function"},"Listen"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'keydown'"],["span",{"class":"token punctuation"},")"],"\n",["span",{"class":"token function"},"handleKeyDown"],["span",{"class":"token punctuation"},"("],["span",{"class":"token parameter"},"ev",["span",{"class":"token operator"},":"]," KeyboardEvent"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token keyword"},"if"]," ",["span",{"class":"token punctuation"},"("],"ev",["span",{"class":"token punctuation"},"."],"key ",["span",{"class":"token operator"},"==="]," ",["span",{"class":"token string"},"'ArrowDown'"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token builtin"},"console"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"log"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'down arrow pressed'"],["span",{"class":"token punctuation"},")"],"\n  ",["span",{"class":"token punctuation"},"}"],"\n",["span",{"class":"token punctuation"},"}"]]],"\n  "],"\n  ",["p",null,"More info on event key strings can be found in the ",["a",{"href":"https://www.w3.org/TR/uievents-key/#named-key-attribute-values"},"w3c spec"],"."],"\n\n",["h2",{"id":"using-events-in-jsx"},"\n  ",["a",{"class":"heading-link","href":"#using-events-in-jsx"},["app-icon",{"name":"link"}],"\n  Using events in JSX\n  "],"\n"],"\n",["p",null,"Within a stencil compiled application or component you can also bind listeners to events directly in JSX. This works very similar to normal DOM events such as ",["code",null,"onClick"],"."],"\n",["p",null,"Let's use our TodoList component from above:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," Event",["span",{"class":"token punctuation"},","]," EventEmitter ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token operator"},"..."],"\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"class"]," ",["span",{"class":"token class-name"},"TodoList"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  @",["span",{"class":"token function"},"Event"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," todoCompleted",["span",{"class":"token operator"},":"]," EventEmitter",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],["span",{"class":"token class-name"},"Todo"]],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},";\n\n  todoCompletedHandler(todo: Todo) "],["span",{"class":"token punctuation"},"{"],"\n    ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],"todoCompleted",["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"emit"],["span",{"class":"token punctuation"},"("],"todo",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token plain-text"},"\n}"]]],"\n  "],"\n  ",["p",null,"We can now listen to this event directly on the component in our JSX using the following syntax:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],"todo-list"]," ",["span",{"class":"token attr-name"},"onTodoCompleted"],["span",{"class":"token script language-javascript"},["span",{"class":"token script-punctuation punctuation"},"="],["span",{"class":"token punctuation"},"{"],["span",{"class":"token parameter"},"ev"]," ",["span",{"class":"token operator"},"=>"]," ",["span",{"class":"token keyword"},"this"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"someMethod"],["span",{"class":"token punctuation"},"("],"ev",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"}"]]," ",["span",{"class":"token punctuation"},"/>"]]]],"\n  "],"\n  \n",["h2",{"id":"listening-to-events-from-a-non-jsx-element"},"\n  ",["a",{"class":"heading-link","href":"#listening-to-events-from-a-non-jsx-element"},["app-icon",{"name":"link"}],"\n  Listening to events from a non-JSX element\n  "],"\n"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],"todo-list"],["span",{"class":"token punctuation"},">"]],["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"</"],"todo-list"],["span",{"class":"token punctuation"},">"]],"\n",["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"<"],"script"],["span",{"class":"token punctuation"},">"]],["span",{"class":"token plain-text"},"\n  const todoListElement = document.querySelector('todo-list');\n  todoListElement.addEventListener('todoCompleted', event => { /* your listener */ })\n"],["span",{"class":"token tag"},["span",{"class":"token tag"},["span",{"class":"token punctuation"},"</"],"script"],["span",{"class":"token punctuation"},">"]]]],"\n  "]]}