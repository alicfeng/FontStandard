{"title":"Unit Testing - Stencil","description":"Unit Testing","url":"/docs/unit-testing","contributors":["adamdbradley","mattdsteele","bassettsj","say25","kensodemann","jthoms1"],"lastUpdated":"2021-03-25T17:19:05Z","headings":[{"id":"unit-testing","level":1,"text":"Unit Testing"},{"id":"newspecpage","level":2,"text":"newSpecPage()"},{"id":"spec-page-options","level":3,"text":"Spec Page Options"},{"id":"spec-page-results","level":3,"text":"Spec Page Results"},{"id":"testing-component-class-logic","level":2,"text":"Testing Component Class Logic"}],"srcPath":"./src/docs/testing/unit-testing.md","hypertext":["div",null,["h1",{"id":"unit-testing"},"\n  \n  Unit Testing\n  \n"],"\n",["p",null,"Stencil makes it easy to unit test components and app utility functions using ",["a",{"href":"https://jestjs.io/"},"Jest"],". Unit tests validate the code in isolation. Well written tests are fast, repeatable, and easy to reason about."],"\n",["p",null,"To run unit tests, run ",["code",null,"stencil test --spec"],". Files ending in ",["code",null,".spec.ts"]," will be executed."],"\n\n",["h2",{"id":"newspecpage"},"\n  ",["a",{"class":"heading-link","href":"#newspecpage"},["app-icon",{"name":"link"}],"\n  newSpecPage()\n  "],"\n"],"\n",["p",null,"In order to unit test a component as rendered HTML, tests can use ",["code",null,"newSpecPage()"]," imported from ",["code",null,"@stencil/core/testing"],". This testing utility method is similar to ",["code",null,"newE2EPage()"],", however, ",["code",null,"newSpecPage()"]," is much faster since it does not require a full ",["a",{"href":"https://pptr.dev/"},"Puppeteer"]," instance to be running. Please see the ",["a",{"href":"/docs/end-to-end-testing"},"newE2EPage()"]," docs on more information about complete End-to-end testing with Puppeteer."],"\n",["p",null,"Below is a simple example where ",["code",null,"newSpecPage()"]," is given one component class which was imported, and the initial HTML to use for the test. In this example, when the component ",["code",null,"MyCmp"]," renders it sets its text content as \"Success!\". The matcher ",["code",null,"toEqualHtml()"]," is then used to ensure the component renders as expected."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-typescript"},["code",{"class":"language-typescript"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," newSpecPage ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'@stencil/core/testing'"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," MyCmp ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'../my-cmp'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token function"},"it"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'should render my component'"],["span",{"class":"token punctuation"},","]," ",["span",{"class":"token keyword"},"async"]," ",["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token operator"},"=>"]," ",["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token keyword"},"const"]," page ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token keyword"},"await"]," ",["span",{"class":"token function"},"newSpecPage"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},"{"],"\n    components",["span",{"class":"token operator"},":"]," ",["span",{"class":"token punctuation"},"["],"MyCmp",["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},","],"\n    html",["span",{"class":"token operator"},":"]," ",["span",{"class":"token template-string"},["span",{"class":"token template-punctuation string"},"`"],["span",{"class":"token string"},"<my-cmp></my-cmp>"],["span",{"class":"token template-punctuation string"},"`"]],["span",{"class":"token punctuation"},","],"\n  ",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n  ",["span",{"class":"token function"},"expect"],["span",{"class":"token punctuation"},"("],"page",["span",{"class":"token punctuation"},"."],"root",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"toEqualHtml"],["span",{"class":"token punctuation"},"("],["span",{"class":"token template-string"},["span",{"class":"token template-punctuation string"},"`"],["span",{"class":"token string"},"\n    <my-cmp>Success!</my-cmp>\n  "],["span",{"class":"token template-punctuation string"},"`"]],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"]]],"\n  "],"\n  \n",["h3",{"id":"spec-page-options"},"\n  ",["a",{"class":"heading-link","href":"#spec-page-options"},["app-icon",{"name":"link"}],"\n  Spec Page Options\n  "],"\n"],"\n",["p",null,"The ",["code",null,"newSpecPage(options)"]," method takes an options argument to help write tests:"],"\n",["table",null,"\n",["thead",null,"\n",["tr",null,"\n",["th",null,"Option"],"\n",["th",null,"Description"],"\n"],"\n"],"\n",["tbody",null,["tr",null,"\n",["td",null,["code",null,"components"]],"\n",["td",null,"An array of components to test. Component classes can be imported into the spec file, then their reference should be added to the ",["code",null,"component"]," array in order to be used throughout the test. ",["em",null,"Required"]],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"html"]],"\n",["td",null,"The initial HTML used to generate the test. This can be useful to construct a collection of components working together, and assign HTML attributes. This value sets the mocked ",["code",null,"document.body.innerHTML"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"template"]],"\n",["td",null,"The initial JSX used to generate the test. Use ",["code",null,"template"]," when you want to initialize a component using their properties, instead of their HTML attributes. It will render the specified template (JSX) into ",["code",null,"document.body"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"autoApplyChanges"]],"\n",["td",null,"By default, any changes to component properties and attributes must call ",["code",null,"page.waitForChanges()"]," in order to test the updates. As an option, ",["code",null,"autoApplyChanges"]," continuously flushes the queue in the background. Defaults to  ",["code",null,"false"]],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"cookie"]],"\n",["td",null,"Sets the mocked ",["code",null,"document.cookie"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"direction"]],"\n",["td",null,"Sets the mocked ",["code",null,"dir"]," attribute on ",["code",null,"<html>"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"language"]],"\n",["td",null,"Sets the mocked ",["code",null,"lang"]," attribute on ",["code",null,"<html>"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"referrer"]],"\n",["td",null,"Sets the mocked ",["code",null,"document.referrer"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"supportsShadowDom"]],"\n",["td",null,"Manually set if the mocked document supports Shadow DOM or not. Defaults to ",["code",null,"true"]],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"userAgent"]],"\n",["td",null,"Sets the mocked ",["code",null,"navigator.userAgent"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"url"]],"\n",["td",null,"Sets the mocked browser's ",["code",null,"location.href"],"."],"\n"],"\n"]],"\n\n",["h3",{"id":"spec-page-results"},"\n  ",["a",{"class":"heading-link","href":"#spec-page-results"},["app-icon",{"name":"link"}],"\n  Spec Page Results\n  "],"\n"],"\n",["p",null,"The returned \"page\" object from ",["code",null,"newSpecPage()"]," contains the initial results from the first render. It's also important to note that the returned page result is a ",["code",null,"Promise"],", so for convenience it's recommended to use async/await."],"\n",["p",null,"The most useful property on the page results would be ",["code",null,"root"],", which is for convenience to find the first root component in the document. For example, if a component is nested in many ",["code",null,"<div>"]," elements, the ",["code",null,"root"]," property goes directly to the component being tested in order to skip the query selector boilerplate code."],"\n",["table",null,"\n",["thead",null,"\n",["tr",null,"\n",["th",null,"Result"],"\n",["th",null,"Description"],"\n"],"\n"],"\n",["tbody",null,["tr",null,"\n",["td",null,["code",null,"body"]],"\n",["td",null,"Mocked testing ",["code",null,"document.body"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"doc"]],"\n",["td",null,"Mocked testing ",["code",null,"document"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"root"]],"\n",["td",null,"The first component found within the mocked ",["code",null,"document.body"],". If a component isn't found, then it'll return ",["code",null,"document.body.firstElementChild"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"rootInstance"]],"\n",["td",null,"Similar to ",["code",null,"root"],", except returns the component instance. If a root component was not found it'll return ",["code",null,"null"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"setContent(html)"]],"\n",["td",null,"Convenience function to set ",["code",null,"document.body.innerHTML"]," and ",["code",null,"waitForChanges()"],". Function argument should be an html string."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"waitForChanges()"]],"\n",["td",null,"After changes have been made to a component, such as a update to a property or attribute, the test page does not automatically apply the changes. In order to wait for, and apply the update, call ",["code",null,"await page.waitForChanges()"],"."],"\n"],"\n",["tr",null,"\n",["td",null,["code",null,"win"]],"\n",["td",null,"Mocked testing ",["code",null,"window"],"."],"\n"],"\n"]],"\n\n",["h2",{"id":"testing-component-class-logic"},"\n  ",["a",{"class":"heading-link","href":"#testing-component-class-logic"},["app-icon",{"name":"link"}],"\n  Testing Component Class Logic\n  "],"\n"],"\n",["p",null,"For simple logic only testing, unit tests can instantiate a component by importing the class and constructing it manually. Since Stencil components are plain JavaScript objects, you can create a new component and execute its methods directly."],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-typescript"},["code",{"class":"language-typescript"},["span",{"class":"token keyword"},"import"]," ",["span",{"class":"token punctuation"},"{"]," MyToggle ",["span",{"class":"token punctuation"},"}"]," ",["span",{"class":"token keyword"},"from"]," ",["span",{"class":"token string"},"'../my-toggle.tsx'"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token function"},"it"],["span",{"class":"token punctuation"},"("],["span",{"class":"token string"},"'should toggle the checked property'"],["span",{"class":"token punctuation"},","]," ",["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"]," ",["span",{"class":"token operator"},"=>"]," ",["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token keyword"},"const"]," toggle ",["span",{"class":"token operator"},"="]," ",["span",{"class":"token keyword"},"new"]," ",["span",{"class":"token class-name"},"MyToggle"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token function"},"expect"],["span",{"class":"token punctuation"},"("],"toggle",["span",{"class":"token punctuation"},"."],"checked",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"toBe"],["span",{"class":"token punctuation"},"("],["span",{"class":"token boolean"},"false"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n\n  toggle",["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"someMethod"],["span",{"class":"token punctuation"},"("],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token function"},"expect"],["span",{"class":"token punctuation"},"("],"toggle",["span",{"class":"token punctuation"},"."],"checked",["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},"."],["span",{"class":"token function"},"toBe"],["span",{"class":"token punctuation"},"("],["span",{"class":"token boolean"},"true"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"],["span",{"class":"token punctuation"},")"],["span",{"class":"token punctuation"},";"]]],"\n  "]]}