{"title":"Testing Config - Stencil","description":"Testing Config","url":"/docs/testing-config","contributors":["adamdbradley","mattcosta7","viernullvier","dmartinjs"],"lastUpdated":"2020-06-17T19:58:07Z","headings":[{"id":"testing-config","level":1,"text":"Testing Config"}],"srcPath":"./src/docs/testing/config.md","hypertext":["div",null,["h1",{"id":"testing-config"},"\n  \n  Testing Config\n  \n"],"\n",["p",null,"The ",["code",null,"testing"]," config setting specifies an object that corresponds to the jest configuration that should be used in your tests. Stencil provides a default configuration, which you likely won't need to edit, however it can be extended with the same configuration options as Jest. See the ",["a",{"href":"https://jestjs.io/docs/en/configuration.html"},"Configuring Jest Guide"]," for configuration details."],"\n",["blockquote",null,"\n",["p",null,"Keep in mind that the usual way of configuring Jest (",["code",null,"package.json"]," and ",["code",null,"jest.config.js"],") is not used with the ",["code",null,"stencil testing"]," command. Jest can still be used, but configuring the presets, transpilation and setting up the correct commands must be done by the project."],"\n"],"\n",["p",null,"Some additional Stencil specific options may be set here as well for configuring the e2e tests:"],"\n\n  ",["highlight-code",null,"\n    ",["pre",{"class":"language-tsx"},["code",{"class":"language-tsx"},["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"interface"]," ",["span",{"class":"token class-name"},"TestingConfig"]," ",["span",{"class":"token keyword"},"extends"]," ",["span",{"class":"token class-name"},"JestConfig"]," ",["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token comment"},"/**\n   * The `allowableMismatchedPixels` value is used to determine an acceptable\n   * number of pixels that can be mismatched before the image is considered\n   * to have changes. Realistically, two screenshots representing the same\n   * content may have a small number of pixels that are not identical due to\n   * anti-aliasing, which is perfectly normal. If the `allowableMismatchedRatio`\n   * is provided it will take precedence, otherwise `allowableMismatchedPixels`\n   * will be used.\n   */"],"\n  allowableMismatchedPixels",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * The `allowableMismatchedRatio` ranges from `0` to `1` and is used to\n   * determine an acceptable ratio of pixels that can be mismatched before\n   * the image is considered to have changes. Realistically, two screenshots\n   * representing the same content may have a small number of pixels that\n   * are not identical due to anti-aliasing, which is perfectly normal. The\n   * `allowableMismatchedRatio` is the number of pixels that were mismatched,\n   * divided by the total number of pixels in the screenshot. For example,\n   * a ratio value of `0.06` means 6% of the pixels can be mismatched before\n   * the image is considered to have changes. If the `allowableMismatchedRatio`\n   * is provided it will take precedence, otherwise `allowableMismatchedPixels`\n   * will be used.\n   */"],"\n  allowableMismatchedRatio",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Matching threshold while comparing two screenshots. Value ranges from `0` to `1`.\n   * Smaller values make the comparison more sensitive. The `pixelmatchThreshold`\n   * value helps to ignore anti-aliasing. Default: `0.1`\n   */"],"\n  pixelmatchThreshold",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Additional arguments to pass to the browser instance.\n   */"],"\n  browserArgs",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},"["],["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Path to a Chromium or Chrome executable to run instead of the bundled Chromium.\n   */"],"\n  browserExecutablePath",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Whether to run browser e2e tests in headless mode. Defaults to true.\n   */"],"\n  browserHeadless",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Slows down e2e browser operations by the specified amount of milliseconds.\n   * Useful so that you can see what is going on.\n   */"],"\n  browserSlowMo",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Array of browser emulations to be using during e2e tests. A full e2e\n   * test is ran for each emulation.\n   */"],"\n  emulate",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," EmulateConfig",["span",{"class":"token punctuation"},"["],["span",{"class":"token punctuation"},"]"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Path to the Screenshot Connector module.\n   */"],"\n  screenshotConnector",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"],"\n\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"interface"]," ",["span",{"class":"token class-name"},"EmulateConfig"]," ",["span",{"class":"token punctuation"},"{"],"\n  ",["span",{"class":"token comment"},"/**\n   * Predefined device descriptor name, such as \"iPhone X\" or \"Nexus 10\".\n   * For a complete list please see: https://github.com/puppeteer/puppeteer/blob/main/src/DeviceDescriptors.ts\n   */"],"\n  device",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * User-Agent to be used. Defaults to the user-agent of the installed Puppeteer version.\n   */"],"\n  userAgent",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"string"],["span",{"class":"token punctuation"},";"],"\n\n  viewport",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," EmulateViewport",["span",{"class":"token punctuation"},";"],"\n",["span",{"class":"token punctuation"},"}"],"\n\n\n",["span",{"class":"token keyword"},"export"]," ",["span",{"class":"token keyword"},"interface"]," ",["span",{"class":"token class-name"},"EmulateViewport"]," ",["span",{"class":"token punctuation"},"{"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Page width in pixels.\n   */"],"\n  width",["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * page height in pixels.\n   */"],"\n  height",["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Specify device scale factor (can be thought of as dpr). Defaults to 1.\n   */"],"\n  deviceScaleFactor",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"number"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Whether the meta viewport tag is taken into account. Defaults to false.\n   */"],"\n  isMobile",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Specifies if viewport supports touch events. Defaults to false\n   */"],"\n  hasTouch",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n  ",["span",{"class":"token comment"},"/**\n   * Specifies if viewport is in landscape mode. Defaults to false.\n   */"],"\n  isLandscape",["span",{"class":"token operator"},"?"],["span",{"class":"token operator"},":"]," ",["span",{"class":"token builtin"},"boolean"],["span",{"class":"token punctuation"},";"],"\n\n",["span",{"class":"token punctuation"},"}"]]],"\n  "]]}